'''
계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다.
 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나,
세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나,
첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시


이건 무슨 조건?
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.?


알고리즘 분류 : 무조건 DP

어떻게 풀이?
1칸걸었을 때는 cnt+1 시키고 아니면 0으로 만듬
그래서 if cnt가 2가 됐을 때는 무조건 2칸가게 만듦 그리고 cnt =0


'''

import sys
n = int(sys.stdin.readline())
nums = [int(sys.stdin.readline()) for _ in range(n)]

if n == 1:
    print(nums[0])
elif n == 2:
    print(nums[0] + nums[1])
else:
    dp = [0] * n
    dp[0] = nums[0]
    dp[1] = nums[0] + nums[1]
    dp[2] = max(nums[0] + nums[2], nums[1] + nums[2])

    for i in range(3, n):
        dp[i] = max(dp[i-2], dp[i-3] + nums[i-1]) + nums[i]

    print(dp[-1])